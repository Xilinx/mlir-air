# Copyright (C) 2022, Advanced Micro Devices, Inc. All rights reserved.
# SPDX-License-Identifier: MIT

name: Generate Github Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-docs:
    name: Generate Documentation
    runs-on: ubuntu-22.04    
    
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      contents: write
      
    steps:
      - name: Configure Environment
        run: echo "$GITHUB_WORKSPACE/llvm/install/bin" >> $GITHUB_PATH

      # Clone the repo and its submodules. Do shallow clone to save clone
      # time.
      - name: Get repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          submodules: "true"

      - name: Install pip packages
        run: sudo pip install psutil pybind11 numpy

      - name: Install packages
        run: sudo apt-get install -y ninja-build clang lld
      
      - name: Install Ninja
        uses: llvm/actions/install-ninja@55d844821959226fab4911f96f37071c1d4c3268

      - name: Get Submodule Hash
        id: get-submodule-hash
        run: echo "::set-output name=hash::$(md5sum $(echo utils/clone-mlir-aie.sh))"
        shell: bash

      - name: Ccache for C++ compilation
        uses: hendrikmuhs/ccache-action@4687d037e4d7cf725512d9b819137a3af34d39b3
        with:
          key: ${{ runner.os }}-generatedocs-${{ steps.get-submodule-hash.outputs.hash }}
          max-size: 1G

      - name: Build and Install libxaie
        run: utils/github-clone-build-libxaie.sh

      - name: Get mlir-aie
        run: utils/clone-mlir-aie.sh

      - name: Build and install mlir-aie
        id: build-aie
        run: |
          pushd mlir-aie
          pip install -r python/requirements.txt

          LLVM_VERSION=$(utils/clone-llvm.sh --get-wheel-version)
          echo "LLVM_PROJECT_VERSION=${LLVM_VERSION}" | tee -a $GITHUB_OUTPUT

          pip -q download mlir==$LLVM_VERSION \
            -f https://github.com/Xilinx/mlir-aie/releases/expanded_assets/mlir-distro
          unzip -q mlir-*.whl
          find mlir -exec touch -a -m -t 201108231405.14 {} \;

          MLIR_AIE_VERSION=`git rev-parse HEAD`
          echo "MLIR_AIE_COMMIT=${MLIR_AIE_VERSION}" | tee -a $GITHUB_OUTPUT

          popd

          utils/github-build-mlir-aie.sh

      # Build the repo test target in release mode to build and test.
      - name: Build Docs
        run: |
          mkdir build_release
          pushd build_release
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_ASSERTIONS=OFF \
            -DCMAKE_MODULE_PATH=`pwd`/../mlir-aie/cmake/modulesXilinx \
            -DMLIR_DIR=`pwd`/../mlir-aie/mlir/lib/cmake/mlir/ \
            -DLLVM_DIR=`pwd`/../mlir-aie/mlir/lib/cmake/llvm/ \
            -DAIE_DIR=`pwd`/../mlir-aie/install/lib/cmake/aie/ \
            -DCMAKE_LINKER=lld \
            -DLLVM_EXTERNAL_LIT=`pwd`/../llvm/build/bin/llvm-lit \
            -DAIR_BUILD_RUNTIME=OFF
          make docs
          popd
          cp -r docs/* build_release/docs
          for file in `find platforms/xilinx* -maxdepth 1 -name 'README.md'`
          do
            platform=`echo $file | cut -d'/' -f2`
            mkdir -p build_release/docs/platforms/$platform
            cp platforms/$platform/*.md build_release/docs/platforms/$platform
          done

      - name: Save LLVM Version
        run: |
          LLVM_VER="${{ steps.build-aie.outputs.LLVM_PROJECT_VERSION }}"
          AIE_VER="${{ steps.build-aie.outputs.MLIR_AIE_COMMIT }}"
          
          echo "{" > ./build_release/docs/build_info.json
          echo "llvm-version: \"${LLVM_VER}\"," >> ./build_release/docs/build_info.json
          echo "mlir-aie-version: \"${AIE_VER}\"," >> ./build_release/docs/build_info.json
          echo "}" > ./build_release/docs/build_info.json

      - name: Publish to github-pages
        uses: peaceiris/actions-gh-pages@v3.6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build_release/docs
          enable_jekyll: true

