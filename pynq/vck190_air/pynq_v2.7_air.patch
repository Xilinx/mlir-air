diff --git a/pynq/bitstream.py b/pynq/bitstream.py
index 384e8241..d4ba018d 100644
--- a/pynq/bitstream.py
+++ b/pynq/bitstream.py
@@ -195,7 +195,8 @@ class Bitstream:
         in the same partial region.
 
         """
-        self.device.remove_device_tree(self.dtbo)
+        if self.dtbo is not None:
+            self.device.remove_device_tree(self.dtbo)
 
     def insert_dtbo(self, dtbo=None):
         """Insert dtbo file into the system.
diff --git a/pynq/overlay.py b/pynq/overlay.py
index f923aa15..7bf0b495 100755
--- a/pynq/overlay.py
+++ b/pynq/overlay.py
@@ -80,8 +80,12 @@ def _assign_drivers(description, ignore_version, device):
 
     for name, details in description['ip'].items():
         details['device'] = device
+        bdtype = details.get('bdtype', None)
         ip_type = details['type']
-        if ip_type in _ip_drivers:
+        
+        if bdtype == 'BLOCK_CONTAINER':
+            details['driver'] = BlockContainerDriver
+        elif ip_type in _ip_drivers:
             details['driver'] = _ip_drivers[ip_type]
         else:
             no_version_ip = ip_type.rpartition(':')[0]
@@ -864,12 +868,22 @@ class _IPMap:
 
         """
         self._description = desc
+        self._driver_attrs = []
+
+
+    def change_description(self, description):
+        for a in self._driver_attrs:
+            delattr(self, a)
+        self._driver_attrs.clear()
+        self._description = description
+
 
     def __getattr__(self, key):
         if key in self._description['hierarchies']:
             hierdescription = self._description['hierarchies'][key]
             hierarchy = hierdescription['driver'](hierdescription)
             setattr(self, key, hierarchy)
+            self._driver_attrs.append(key)
             return hierarchy
         elif key in self._description['ip']:
             ipdescription = self._description['ip'][key]
@@ -882,22 +896,26 @@ class _IPMap:
                     UserWarning)
                 driver = DefaultIP(ipdescription)
             setattr(self, key, driver)
+            self._driver_attrs.append(key)
             return driver
         elif key in self._description['interrupts']:
             interrupt = Interrupt(
                 self._description['interrupts'][key]['fullpath'])
             setattr(self, key, interrupt)
+            self._driver_attrs.append(key)
             return interrupt
         elif key in self._description['gpio']:
             gpio_index = self._description['gpio'][key]['index']
             gpio_number = GPIO.get_gpio_pin(gpio_index)
             gpio = GPIO(gpio_number, 'out')
             setattr(self, key, gpio)
+            self._driver_attrs.append(key)
             return gpio
         elif key in self._description['memories']:
             mem = self._description['device'].get_memory(
                 self._description['memories'][key])
             setattr(self, key, mem)
+            self._driver_attrs.append(key)
             return mem
         else:
             raise AttributeError(
@@ -994,6 +1012,7 @@ class DefaultHierarchy(_IPMap, metaclass=RegisterHierarchy):
         self.description = description
         self.parsers = dict()
         self.bitstreams = dict()
+        self.descriptions = dict()
         self.pr_loaded = ''
         self.device = description['device']
         self._overlay = description['overlay']
@@ -1059,6 +1078,11 @@ class DefaultHierarchy(_IPMap, metaclass=RegisterHierarchy):
         bitfile_name = self.bitstreams[bitfile_name].bitfile_name
         self.parsers[bitfile_name] = self.device.get_bitfile_metadata(
             bitfile_name)
+        parser = self.parsers[bitfile_name]
+        description = _complete_description(
+            parser.ip_dict, parser.hierarchy_dict, False,
+            parser.mem_dict, self.device)
+        self.descriptions[bitfile_name] = description
 
     def _parse(self, bitfile_name):
         bitfile_name = self.bitstreams[bitfile_name].bitfile_name
@@ -1086,3 +1110,18 @@ class DefaultHierarchy(_IPMap, metaclass=RegisterHierarchy):
     def _load_bitstream(self, bitfile_name):
         self.bitstreams[bitfile_name].download()
         self.pr_loaded = self.bitstreams[bitfile_name].bitfile_name
+        self.change_description(self.descriptions[
+                self.bitstreams[bitfile_name].bitfile_name])
+
+class BlockContainerDriver(DefaultHierarchy):
+    def __init__(self, description):
+        blank_description = {
+            'hierarchies': {},
+            'ip': {},
+            'interrupts': description['interrupts'],
+            'gpio': description['gpio'],
+            'memories': {},
+            'device': description['device'],
+            'fullpath': description['fullpath']
+        }
+        super().__init__(blank_description)
diff --git a/pynq/pl_server/hwh_parser.py b/pynq/pl_server/hwh_parser.py
index 2ce5f273..374bd13b 100644
--- a/pynq/pl_server/hwh_parser.py
+++ b/pynq/pl_server/hwh_parser.py
@@ -648,8 +648,17 @@ class _HWHUltrascale(_HWHABC):
             "./PARAMETERS/*[@NAME='{0}']".format(clk_enable)).get('VALUE'))
 
 
+class _HWHVersal(_HWHABC):
+    family_ps = "versal_cips"
+    
+    def find_clock_enable(self, mod, clk_id):
+        return 0
+    
+    def find_clock_divisor(self, mod, clk_id, div_id):
+        return 1
+
 if CPU_ARCH == ZU_ARCH:
-    HWH = _HWHUltrascale
+    HWH = _HWHVersal
 elif CPU_ARCH == ZYNQ_ARCH:
     HWH = _HWHZynq
 else:
diff --git a/sdbuild/Makefile b/sdbuild/Makefile
index 3383c294..04b0e9aa 100644
--- a/sdbuild/Makefile
+++ b/sdbuild/Makefile
@@ -4,8 +4,8 @@ BOARDS ?= $(basename $(notdir $(wildcard $(BOARDDIR)/*/*.spec)))
 UBUNTU_RELEASE := focal
 VERSION := 2.7.0
 
-KERNEL_VERSION := 2020.2
-LINUX_VERSION := 5.4.0-xilinx-v2020.2
+KERNEL_VERSION := 2021.2
+LINUX_VERSION := 5.10.0-xilinx-v2021.2
 QEMU_VERSION := 5.2.0
 SCRIPT_DIR := $(CURDIR)/scripts
 SHELL := /bin/bash
@@ -24,8 +24,15 @@ DIST_ROOT := $(CURDIR)/output/dist
 
 KERNEL_arm := zImage
 KERNEL_aarch64 := Image
-BOOT_arm := u-boot.elf zynq_fsbl.elf
-BOOT_aarch64 := u-boot.elf zynqmp_fsbl.elf pmufw.elf bl31.elf
+BOOT_zynq := u-boot.elf zynq_fsbl.elf
+BOOT_zynqmp := u-boot.elf zynqmp_fsbl.elf pmufw.elf bl31.elf
+BOOT_versal := u-boot.elf plm.elf psmfw.elf bl31.elf
+
+ARCH_amp := arm
+ARCH_aarch64 := aarch64
+ARCH_zynq := arm
+ARCH_zynqmp := aarch64
+ARCH_versal := aarch64
 
 export CCACHEDIR
 export ROOTDIR
@@ -82,7 +89,19 @@ define BOARD_SPECIFIC_RULES
 ifeq ($$(FPGA_MANAGER_$1),)
 	FPGA_MANAGER_$1 := 1
 endif
-
+ifeq ($$(ARCH_$1),arm)
+	TEMPLATE_$1 := zynq
+endif
+ifeq ($$(ARCH_$1),aarch64)
+	TEMPLATE_$1 := zynqMP
+endif
+ifeq ($$(ARCH_$1),versal)
+	ARCH_$1 := aarch64
+	FAMILY_$1 := versal
+	TEMPLATE_$1 := versal
+else
+	FAMILY_$1 := $${ARCH_$1}
+endif
 BOARDDIR_$1 := $$(BOARDDIR)/$1
 BITSTREAM_ABS_$1 := $$(patsubst %, $$(BOARDDIR_$1)/%, $$(BITSTREAM_$1))
 BUILD_ROOT_$1 := $$(BUILD_ROOT)/$1
@@ -94,18 +113,13 @@ ROOT_$1 := $$(BUILD_ROOT)/$1.tar.gz
 SYSROOT_$1 := $$(SYSROOT_ROOT)/$1
 EXTRA_BOOT_$1 := $$(BUILD_ROOT)/$1.extra_boot
 
-ifeq ($$(ARCH_$1),arm)
-	TEMPLATE_$1 := zynq
-endif
-ifeq ($$(ARCH_$1),aarch64)
-	TEMPLATE_$1 := zynqMP
-endif
 
 BSP_BUILD_$1 := $$(BUILD_ROOT_$1)/petalinux_bsp
 BSP_ABS_$1 := $$(patsubst %,$$(BOARDDIR_$1)/%,$$(BSP_$1))
 BSP_PROJECT_$1 := xilinx-$$(shell echo $1 | tr A-Z a-z | tr -cd '[:alnum:]')-$$(KERNEL_VERSION)
 BSP_TARGET_$1 := $$(BSP_BUILD_$1)/$$(BSP_PROJECT_$1).bsp
 BSP_ENV_$1 := BSP=$$(BSP_$1) BSP_BUILD=$$(BSP_BUILD_$1) BSP_ABS=$$(BSP_ABS_$1) BSP_PROJECT=$$(BSP_PROJECT_$1)
+XSA_ABS_$1 := $$(patsubst %,$$(BOARDDIR_$1)/%,$$(XSA_$1))
 
 $$(BSP_BUILD_$1): | $$(BUILD_ROOT_$1)
 	-rm -rf $$(BSP_BUILD_$1)
@@ -136,31 +150,33 @@ KERNEL_RPM_$1 := $$(PL_PROJ_$1)/build/tmp/deploy/rpm/kernel-devsrc-1.0-r0.plnx_$
 PL_ENV_$1 := PYNQ_BOARDNAME=$1 FPGA_MANAGER=$$(FPGA_MANAGER_$1)
 
 BOOT_FILES_$1 := $$(BOOT_ROOT_$1)/image.ub $$(BOOT_ROOT_$1)/BOOT.BIN $$(BOOT_ROOT_$1)/boot.scr
-BOOT_DEPENDS_$1 := $$(patsubst %, $$(PL_PROJ_$1)/images/linux/%, $$(BOOT_$$(ARCH_$1)))
-$$(PL_PROJ_$1): $$(BSP_TARGET_$1)
+BOOT_DEPENDS_$1 := $$(patsubst %, $$(PL_PROJ_$1)/images/linux/%, $$(BOOT_$$(FAMILY_$1)))
+EXTRA_CONF_$1 := $$(patsubst %, --get-hw-description %, $$(dir $$(XSA_ABS_$1)))
+$$(info $$(XSA_$1))
+$$(info $$(XSA_ABS_$1))
+$$(info $$(EXTRA_CONF_$1))
+$$(PL_PROJ_$1): $$(BSP_TARGET_$1) $$(XSA_ABS_$1)
 	-rm -rf $$(PL_PROJ_$1)
 	cd $$(BUILD_ROOT_$1) && petalinux-create -t project \
 		-s $$(BSP_BUILD_$1)/$$(BSP_PROJECT_$1).bsp -n petalinux_project
-	echo 'CONFIG_USER_LAYER_0="'$(CURDIR)/boot/meta-pynq'"' >> $$(PL_CONFIG_$1)
+#	echo 'CONFIG_USER_LAYER_0="'$(CURDIR)/boot/meta-pynq'"' >> $$(PL_CONFIG_$1)
 	echo 'CONFIG_SUBSYSTEM_ROOTFS_EXT4=y' >> $$(PL_CONFIG_$1)
 	echo 'CONFIG_SUBSYSTEM_SDROOT_DEV="/dev/mmcblk0p2"' >> $$(PL_CONFIG_$1)
-	echo 'CONFIG_SUBSYSTEM_ETHERNET_MANUAL_SELECT=y' >> $$(PL_CONFIG_$1)
+#	echo 'CONFIG_SUBSYSTEM_ETHERNET_MANUAL_SELECT=y' >> $$(PL_CONFIG_$1)
 	if [ $$(FPGA_MANAGER_$1) = 1 ]; then \
 		echo 'CONFIG_SUBSYSTEM_DEVICETREE_FLAGS="-@"' >> $$(PL_CONFIG_$1) ;\
 		echo 'CONFIG_SUBSYSTEM_DTB_OVERLAY=y' >> $$(PL_CONFIG_$1) ;\
 		echo 'CONFIG_SUBSYSTEM_FPGA_MANAGER=y' >> $$(PL_CONFIG_$1) ;\
-	else \
-		echo 'CONFIG_SUBSYSTEM_REMOVE_PL_DTB=y' >> $$(PL_CONFIG_$1) ;\
 	fi
-	echo 'CONFIG_xrt=y' >> $$(PL_ROOTFS_CONFIG_$1)
-	echo 'CONFIG_xrt-dev=y' >> $$(PL_ROOTFS_CONFIG_$1)
-	echo 'CONFIG_zocl=y' >> $$(PL_ROOTFS_CONFIG_$1)
-	echo 'CONFIG_opencl-headers-dev=y' >> $$(PL_ROOTFS_CONFIG_$1)
-	echo 'CONFIG_opencl-clhpp-dev=y' >> $$(PL_ROOTFS_CONFIG_$1)
-	petalinux-config --silentconfig -p $$(PL_PROJ_$1)
+#	echo 'CONFIG_xrt=y' >> $$(PL_ROOTFS_CONFIG_$1)
+#	echo 'CONFIG_xrt-dev=y' >> $$(PL_ROOTFS_CONFIG_$1)
+#	echo 'CONFIG_zocl=y' >> $$(PL_ROOTFS_CONFIG_$1)
+#	echo 'CONFIG_opencl-headers-dev=y' >> $$(PL_ROOTFS_CONFIG_$1)
+#	echo 'CONFIG_opencl-clhpp-dev=y' >> $$(PL_ROOTFS_CONFIG_$1)
+	petalinux-config --silentconfig -p $$(PL_PROJ_$1) $$(EXTRA_CONF_$1)
 
 $$(BOOT_ROOT_$1)/BOOT.BIN : $$(BOOT_DEPENDS_$1) $$(BOOT_BITSTREAM_$1) | $$(BOOT_ROOT_$1)
-	cd $$(BOOT_ROOT_$1) && petalinux-package --boot --fpga $$(BITSTREAM_ABS_$1) --u-boot -p $$(PL_PROJ_$1) --force
+	cd $$(BOOT_ROOT_$1) && petalinux-package --boot --u-boot -p $$(PL_PROJ_$1) --force --qemu-rootfs no
 	cp -f $$(PL_PROJ_$1)/images/linux/BOOT.BIN $$(BOOT_ROOT_$1)
 
 $$(BOOT_ROOT_$1)/image.ub : $$(BUILD_ROOT_$1)/image.its $$(BUILD_ROOT_$1)/system.dtb $$(BUILD_ROOT_$1)/$$(KERNEL_$$(ARCH_$1)) | $$(BOOT_ROOT_$1)
@@ -192,6 +208,12 @@ $$(PL_PROJ_$1)/images/linux/system.dtb:  $$(PL_CONFIG_$1)
 $$(PL_PROJ_$1)/images/linux/pmufw.elf:  $$(PL_CONFIG_$1)
 	$$(PL_ENV_$1) petalinux-build -c pmufw -p $$(PL_PROJ_$1)
 
+$$(PL_PROJ_$1)/images/linux/psmfw.elf:  $$(PL_CONFIG_$1)
+	PYNQ_BOARDNAME=$1 petalinux-build -c psmfw -p $$(PL_PROJ_$1)
+
+$$(PL_PROJ_$1)/images/linux/plm.elf:  $$(PL_CONFIG_$1)
+	PYNQ_BOARDNAME=$1 petalinux-build -c plm -p $$(PL_PROJ_$1)
+
 $$(PL_PROJ_$1)/images/linux/bl31.elf:  $$(PL_CONFIG_$1)
 	$$(PL_ENV_$1) petalinux-build -c arm-trusted-firmware -p $$(PL_PROJ_$1)
 
@@ -366,7 +388,7 @@ checkenv: $(patsubst %, qemu_check_%, $(USED_ARCH))
 	which ct-ng
 	bash $(SCRIPT_DIR)/check_env.sh
 
-boot_files: checkenv $(BOOT_FILES)
+boot_files: $(BOOT_FILES)
 
 images: checkenv $(IMAGE_FILES)
 
diff --git a/sdbuild/boot/image_aarch64.its b/sdbuild/boot/image_aarch64.its
index 2a725365..d4720534 100644
--- a/sdbuild/boot/image_aarch64.its
+++ b/sdbuild/boot/image_aarch64.its
@@ -5,7 +5,7 @@
     #address-cells = <1>;
  
     images {
-        kernel@0 {
+        kernel-0 {
             description = "Linux Kernel";
             data = /incbin/("./Image");
             type = "kernel";
@@ -14,30 +14,30 @@
             compression = "none";
             load = <0x80000>;
             entry = <0x80000>;
-            hash@1 {
+            hash-1 {
                 algo = "sha1";
             };
         };
-        fdt@0 {
+        fdt-0 {
             description = "Flattened Device Tree blob";
             data = /incbin/("./system.dtb");
             type = "flat_dt";
             arch = "arm64";
             compression = "none";
-            hash@1 {
+            hash-1 {
                 algo = "sha1";
             };
         };
     };
     configurations {
-        default = "conf@1";
-        conf@1 {
+        default = "conf-1";
+        conf-1 {
             description = "Boot Linux kernel with FDT blob";
-            kernel = "kernel@0";
-            fdt = "fdt@0";
-            hash@1 {
+            kernel = "kernel-0";
+            fdt = "fdt-0";
+            hash-1 {
                 algo = "sha1";
             };
         };
     };
-};
+};
\ No newline at end of file
diff --git a/sdbuild/boot/meta-pynq/recipes-bsp/device-tree/device-tree.bbappend b/sdbuild/boot/meta-pynq/recipes-bsp/device-tree/device-tree.bbappend
index a8653ec6..4d542f0c 100644
--- a/sdbuild/boot/meta-pynq/recipes-bsp/device-tree/device-tree.bbappend
+++ b/sdbuild/boot/meta-pynq/recipes-bsp/device-tree/device-tree.bbappend
@@ -50,5 +50,15 @@ do_configure_append_zynqmp () {
         exit 1
     fi
 }
+do_configure_append_versal () {
+    PYNQ_BOARDNAME="${@d.getVar('BB_ORIGENV', False).getVar('PYNQ_BOARDNAME', True)}"
+    echo '/include/ "pynq_xlnk_zynqmp.dtsi"' >> ${DT_FILES_PATH}/system-top.dts
+    if [ -n "${PYNQ_BOARDNAME}" ]; then
+        echo "/ { chosen { pynq_board = \"${PYNQ_BOARDNAME}\"; }; };" >> ${DT_FILES_PATH}/system-top.dts
+    else
+        echo "No board set"
+        exit 1
+    fi
+}
 
 do_configure[vardepsexclude] = "BB_ORIGENV"
diff --git a/sdbuild/packages/acdc/pre.sh b/sdbuild/packages/acdc/pre.sh
new file mode 100755
index 00000000..c5491616
--- /dev/null
+++ b/sdbuild/packages/acdc/pre.sh
@@ -0,0 +1,20 @@
+#! /bin/bash
+
+set -x
+set -e
+
+target=$1
+
+# uncomment below to make an acdc install area
+
+#src_dir=/work/acdc
+#acdc_dir=$target/opt/acdc
+
+# sudo mkdir $acdc_dir
+# sudo cp -r -L --no-preserve=links $src_dir/buildCross/install $acdc_dir/
+
+# sudo mkdir -p $acdc_dir/build/torch-mlir/python_packages
+# sudo cp -r -L --no-preserve=links $src_dir/buildCross/torch-mlir/python_packages/torch_mlir $acdc_dir/build/torch-mlir/python_packages
+
+# sudo mkdir $acdc_dir/examples
+# sudo cp -r -L --no-preserve=links $src_dir/air/examples/notebooks $acdc_dir/examples
diff --git a/sdbuild/packages/acdc/qemu.sh b/sdbuild/packages/acdc/qemu.sh
new file mode 100755
index 00000000..aa49d958
--- /dev/null
+++ b/sdbuild/packages/acdc/qemu.sh
@@ -0,0 +1,24 @@
+#!/bin/bash
+
+set -x
+set -e
+
+export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true
+export LC_ALL=C LANGUAGE=C LANG=C
+
+apt-get clean
+apt update
+apt install -y ninja-build clang-10 lld-10 tar
+apt install -y python3.8 libpython3.8-dev python3.8-venv python3.8-distutils python3-pip
+apt purge -y cmake
+
+# wget https://bootstrap.pypa.io/get-pip.py
+# python3.8 get-pip.py
+# rm get-pip.py
+
+# cd /opt
+
+# git clone https://github.com/brandt/symlinks.git
+# cd symlinks
+# make
+# ./symlinks -rc /
diff --git a/sdbuild/packages/pynq/pre.sh b/sdbuild/packages/pynq/pre.sh
index f669e76b..a4878f38 100755
--- a/sdbuild/packages/pynq/pre.sh
+++ b/sdbuild/packages/pynq/pre.sh
@@ -67,7 +67,7 @@ else
 	fi
 	# build bitstream, microblazes' bsps and binaries
 	cd $BUILD_ROOT/PYNQ
-	./build.sh
+	# ./build.sh
 	# get rid of Vivado temp files in case there are any
 	boards=`find boards -maxdepth 2 -name '*.spec' -printf '%h\n' | cut -f2 -d"/"`
 	for bd_name in $boards ; do
diff --git a/sdbuild/packages/resizefs/resizefs.sh b/sdbuild/packages/resizefs/resizefs.sh
index a60700cf..dd045d75 100755
--- a/sdbuild/packages/resizefs/resizefs.sh
+++ b/sdbuild/packages/resizefs/resizefs.sh
@@ -8,8 +8,8 @@
 exec >> /var/log/syslog
 exec 2>&1
 
-TGTDEV=/dev/mmcblk0
-TGTPART=/dev/mmcblk0p2
+TGTPART=$(mount | grep "/ " | cut -f 1 -d ' ')
+TGTDEV=${TGTPART%p*}
 source /etc/environment
 
 if [[ ${RESIZED} -eq "1" ]]; then
diff --git a/sdbuild/packages/xaienginev2/qemu.sh b/sdbuild/packages/xaienginev2/qemu.sh
new file mode 100755
index 00000000..219efb52
--- /dev/null
+++ b/sdbuild/packages/xaienginev2/qemu.sh
@@ -0,0 +1,37 @@
+#! /bin/bash
+
+# Installs the xaiengine driver from the embeddedsw repo
+# All will get deposited in the following directory
+
+PREFIX=/opt/xaienginev2
+REVISION="xlnx_rel_v2021.2"
+
+set -x
+set -e
+
+# Fetch the repo
+cd /root
+git clone https://github.com/Xilinx/embeddedsw.git
+cd embeddedsw
+git checkout $REVISION
+
+# Install libaiengine
+
+export LIBRARY_PATH=$PREFIX/lib:$LIBRARY_PATH
+export C_INCLUDE_PATH=$PREFIX/include:$C_INCLUDE_PATH
+cd /root/embeddedsw/XilinxProcessorIPLib/drivers/aienginev2/src
+
+make -f Makefile.Linux CFLAGS="-D__AIELINUX__"
+
+mkdir $PREFIX
+mkdir $PREFIX/lib
+mkdir $PREFIX/include
+
+cp *.so* $PREFIX/lib
+cp -r ../include/* $PREFIX/include
+
+echo $PREFIX/lib > /etc/ld.so.conf.d/xaienginev2.conf
+ldconfig
+
+cd /
+rm -rf /root/embeddedsw
diff --git a/sdbuild/packages/xrt/qemu.sh b/sdbuild/packages/xrt/qemu.sh
index dbdc230b..1b42ba17 100755
--- a/sdbuild/packages/xrt/qemu.sh
+++ b/sdbuild/packages/xrt/qemu.sh
@@ -4,6 +4,16 @@
 set -e
 set -x
 
+use_aie=0
+AIE_PREFIX=/opt/xaiengine
+
+if [ -d $AIE_PREFIX ]
+then
+  export LIBRARY_PATH=$AIE_PREFIX/lib:$LIBRARY_PATH
+  export C_INCLUDE_PATH=$AIE_PREFIX/include:$C_INCLUDE_PATH
+  export CPLUS_INCLUDE_PATH=$AIE_PREFIX/include:$CPLUS_INCLUDE_PATH
+  use_aie=1
+fi
 
 # build and install
 cd /root
@@ -19,6 +29,11 @@ cd build
 chmod 755 build.sh
 XRT_NATIVE_BUILD=no ./build.sh -dbg
 cd Debug
+if [ "$use_aie" == "1" ]
+then
+  XRT_NATIVE_BUILD=no cmake -DXRT_AIE_BUILD=yes -DCMAKE_CXX_FLAGS="-DXRT_ENABLE_AIE" .
+  make -j 4
+fi
 make install
 
 cd ..
diff --git a/sdbuild/scripts/create_bsp.sh b/sdbuild/scripts/create_bsp.sh
index 4cd3c3df..801b2c2f 100755
--- a/sdbuild/scripts/create_bsp.sh
+++ b/sdbuild/scripts/create_bsp.sh
@@ -4,7 +4,7 @@ set -x
 set -e
 
 board=$1
-template=$2
+template=versal
 
 if [ -n "$BSP" ]; then
 	# If $BSP is a URL, fetch it!
diff --git a/sdbuild/scripts/create_mount_img.sh b/sdbuild/scripts/create_mount_img.sh
index b8a64b84..77298d24 100755
--- a/sdbuild/scripts/create_mount_img.sh
+++ b/sdbuild/scripts/create_mount_img.sh
@@ -5,7 +5,7 @@ set -x
 image_file=$1
 image_dir=$2
 script_dir=$(dirname ${BASH_SOURCE[0]})
-truncate --size 15G $image_file
+truncate --size 31G $image_file
 $script_dir/create_partitions.sh $image_file
 mount_points=( $(sudo kpartx -av $image_file | cut -d ' ' -f 3) )
 
diff --git a/sdbuild/scripts/install_packages.sh b/sdbuild/scripts/install_packages.sh
index 120453d9..95f06156 100755
--- a/sdbuild/scripts/install_packages.sh
+++ b/sdbuild/scripts/install_packages.sh
@@ -6,7 +6,7 @@ set -x
 target=$1
 shift
 
-fss="proc run dev"
+fss="proc dev"
 
 
 for fs in $fss
diff --git a/sdbuild/scripts/mount_image.sh b/sdbuild/scripts/mount_image.sh
index 86c1cd7a..066d0ee4 100755
--- a/sdbuild/scripts/mount_image.sh
+++ b/sdbuild/scripts/mount_image.sh
@@ -2,6 +2,21 @@
 
 image_file=$1
 image_dir=$2
+
+sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' << EOF | fdisk $image_file
+  d # delete partition
+  2 # rootfs partition
+  n # new partition
+  p # primary partition
+  2 # partion number 2
+    # default, start immediately after preceding partition
+    # default, rest of disk
+  N # [N]o, don't alter existing ext4 signature
+  p # print the in-memory partition table
+  w # write the partition table
+  q # and we're done
+EOF
+
 script_dir=$(dirname ${BASH_SOURCE[0]})
 mount_points=( $(sudo kpartx -av $image_file | cut -d ' ' -f 3) )
 
@@ -14,6 +29,9 @@ boot_part=/dev/mapper/${mount_points[0]}
 sleep 5
 mkdir -p $image_dir
 
+sudo e2fsck -f $root_part
+sudo resize2fs -f $root_part
+
 sudo mount $root_part $image_dir
 sudo mount $boot_part $image_dir/boot
 
diff --git a/sdbuild/scripts/resize_umount.sh b/sdbuild/scripts/resize_umount.sh
index db3c2408..7a3b860c 100755
--- a/sdbuild/scripts/resize_umount.sh
+++ b/sdbuild/scripts/resize_umount.sh
@@ -21,13 +21,13 @@ sudo umount $image_dir
 sudo chroot / e2fsck -y -f $root_dev
 used_blocks=$(sudo chroot / resize2fs $root_dev -P | tail -n 1 | cut -d : -f 2)
 used_size=$(( $used_blocks * 4 ))
-new_size=$(( $used_size + (300 * 1024) ))
+new_size=$(( $used_size + (500 * 1024) ))
 
 echo "New size will be $new_size K"
 
 
 sudo chroot / e2fsck -y -f $root_dev
-sudo chroot / resize2fs $root_dev ${new_size}K
+sudo chroot / resize2fs -f $root_dev ${new_size}K
 sudo chroot / zerofree $root_dev
 
 sleep 5
