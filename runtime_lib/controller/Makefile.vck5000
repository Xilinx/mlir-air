# Copyright (C) 2022, Xilinx Inc.
# Copyright (C) 2022, Advanced Micro Devices, Inc.
# SPDX-License-Identifier: MIT

LD_SRCS += \
vck5000.ld

OBJS += \
./$(OUTPUT)/cdma.o \
./$(OUTPUT)/main.o \
./$(OUTPUT)/platform.o \
./$(OUTPUT)/shell.o \

CXX=aarch64-none-elf-g++
CXXFLAGS := -Wall -O2 -g3 -c -fmessage-length=0 -mcpu=cortex-a72 -DARM_CONTROLLER
LIBS := -Wl,--start-group,-lxil,-lgcc,-lc,-lstdc++,--end-group
OUTPUT := vck5000_obj
BSP_ARM := bsp/arm
BSP_ARM_INCLUDE := $(BSP_ARM)/psv_cortexa72_0/include
BSP_ARM_LIB := $(BSP_ARM)/psv_cortexa72_0/lib

INCLUDES += -I../airhost/include -I$(BSP_ARM_INCLUDE)

# pull in dependency info for *existing* .o files
#-include $(OBJS:.o=.d)

all: dirs vck5000.elf secondary-outputs

# Each subdirectory must supply rules for building sources it contributes
$(OUTPUT)/%.o: %.cpp
	@echo 'Building file: $<'
	@echo 'Invoking: ARM v8 g++ compiler'
	$(CXX) $(CXXFLAGS) $(INCLUDES) -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@)" -o "$@" "$<"
	@echo 'Finished building: $<'
	@echo ' '

# Add inputs and outputs from these tool invocations to the build variables
ELFSIZE += \
vck5000.elf.size \

# create output directory for .o and .d files
dirs:
	mkdir -p $(OUTPUT)

# Tool invocations
vck5000.elf: $(OBJS) vck5000.ld $(BSP_ARM_LIB)/libxil.a
	@echo 'Building target: $@'
	@echo 'Invoking: ARM v8 g++ linker'
	$(CXX) -mcpu=cortex-a72 -Wl,-T -Wl,vck5000.ld -L$(BSP_ARM_LIB) -o "$@" $(OBJS) $(LIBS)
	@echo 'Finished building target: $@'
	@echo ' '

vck5000.elf.size: vck5000.elf
	@echo 'Invoking: ARM v8 Print Size'
	aarch64-none-elf-size vck5000.elf  |tee "$@"
	@echo 'Finished building: $@'
	@echo ' '

$(BSP_ARM_LIB)/libxil.a:
	@echo 'Building BSP'
	$(MAKE) -C $(BSP_ARM)

RM := rm -rf

# Other Targets
clean:
	-$(RM) $(OBJS) $(ELFSIZE) $(OUTPUT) vck5000.elf
	$(MAKE) -C $(BSP_ARM) clean
	-@echo ' '

secondary-outputs: $(ELFSIZE)

.PHONY: all clean
