//===- air_host_impl.h -----------------------------------------*- C++ -*-===//
//
// Copyright (C) 2022, Advanced Micro Devices, Inc.
// SPDX-License-Identifier: MIT
//
//===----------------------------------------------------------------------===//

#ifndef AIR_HOST_IMPL_H
#define AIR_HOST_IMPL_H

#include "test_library.h"

typedef struct air_physical_device_s {
  char aie_bar_path[128];
  uint64_t aie_bar_size;
  char dram_bar_path[128];
  uint64_t dram_bar_size;
  char bram_bar_path[128];
  uint64_t bram_bar_size;
} air_physical_device_t;

typedef struct air_dev_mem_allocator_s {
  void *dev_mem;
  uint64_t dev_mem_ptr;
  uint64_t dev_mem_size;
} air_dev_mem_allocator_t;

// AIE config functions generated by AIE dialect lowering
struct air_rt_aie_functions_t {
  int (*configure_cores)(aie_libxaie_ctx_t *);
  int (*configure_switchboxes)(aie_libxaie_ctx_t *);
  int (*initialize_locks)(aie_libxaie_ctx_t *);
  int (*configure_dmas)(aie_libxaie_ctx_t *);
  int (*start_cores)(aie_libxaie_ctx_t *);
};

/*
        Get the name of the device driver

        Use this to device to map various device memory regions into the host
   address space
*/
const char *air_get_driver_name(void);

#endif
